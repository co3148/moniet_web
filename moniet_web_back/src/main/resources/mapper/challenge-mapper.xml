<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace= "kr.or.iei.challenge.model.dao.ChallengeDao">

	<!--챌린지 목록-->
	<select id="challengeList1" resultType="challenge">
		select 
			challenge_no,
  			challenge_title,
  			challenge_content,
  			challenge_kind,
  			challenge_amount,
  			challenge_result,
  			member_no2,
  			to_char(challenge_start,'yyyy-mm-dd') as challenge_start,
  			to_char(challenge_end,'yyyy-mm-dd') as challenge_end
		 from challenge
		 where member_no2=(select member_no from member where member_id=#{memberId}) and
		 to_char(challenge_end,'yyyy-mm-dd') >= to_char(sysdate,'yyyy-mm-dd') and challenge_result = 0 
		 order by 1 desc
	</select>
	
	<!--챌린지 목록(종료)-->
	<select id="challengeList2" resultType="challenge">
		select 
			challenge_no,
  			challenge_title,
  			challenge_content,
  			challenge_kind,
  			challenge_amount,
  			challenge_result,
  			member_no2,
  			to_char(challenge_start,'yyyy-mm-dd') as challenge_start,
  			to_char(challenge_end,'yyyy-mm-dd') as challenge_end
		 from challenge
		  where member_no2=(select member_no from member where member_id=#{memberId}) and
		  (to_char(sysdate,'yyyy-mm-dd') > to_char(challenge_end,'yyyy-mm-dd') or challenge_result = 2 or challenge_result = 1)
		  order by 1 desc
	</select>
	
	<!--챌린지 상세보기-->
	<select id="selectOneChallenge" resultType="challenge">
		 select 
  			challenge_no,
  			challenge_title,
  			challenge_content,
  			challenge_kind,
  			challenge_amount,
  			challenge_result,
  			member_no2,
  			member_id,
  			to_char(challenge_start,'yyyy-mm-dd') as challenge_start,
  			to_char(challenge_end,'yyyy-mm-dd') as challenge_end,
  			(select sum(cashbook_money) from cashbook where member_no=(select member_no from member where member_id=#{memberId}) and cashbook_finance = challenge_kind and cashbook_date between challenge_start and challenge_end) total
  		 from challenge 
  		 join member on (member_no2 = member_no)
  		 where challenge_no = #{challengeNo}
	</select>
	
	<!--챌린지 만들기-->
  	<insert id="insertChallenge">
  		insert into challenge values(challenge_seq.nextval,(select member_no from member where member_id=#{memberId}),#{challengeTitle},#{challengeContent},#{challengeKind},#{challengeAmount},#{challengeStart},#{challengeEnd},1,0)
  	</insert>
  	
  	<!--챌린지 삭제-->
  	<delete id="deleteChallenge">
  		delete from challenge where challenge_no = #{challengeNo}
  	</delete>
  	
  	<!--챌린지 포기-->
  	<update id="changeChallenge">
  		update challenge set challenge_result = #{challengeResult},challenge where challenge_no = #{challengeNo}
  	</update>
  	
  	<!--챌린지 기간 종료-->
  	<update id="challengeFinish">
  	<![CDATA[
  		update challenge set challenge_result = 2
		where challenge_no in 
		(select challenge_no from challenge 
		where challenge_result =0 
		and 
		to_char(challenge_end,'yyyy-mm-dd') < to_char(sysdate,'yyyy-mm-dd'))
	]]>
  	</update>
  	 	
  	<select id="challengeLevel" resultType="int">
  		select challenge_status from(select  rownum as num,challenge_status from challenge join member on (member_no2 = member_no) where member_no=(select member_no from member where member_id=#{memberId})) X where X.num=1
  	</select>
  	
  	<!-- 입력창에 띄울 챌린지 목록 조회용 -->
  	<select id="challengeListsByMember" resultType="challenge">
  	<![CDATA[
  		select challenge_no, challenge_title from CHALLENGE where member_no2 = (select member_no from member where member_id=#{memberId}) and challenge_state=1 and CHALLENGE_KIND=1 and (sysdate >= challenge_start and sysdate <= challenge_end )
  	]]>
  	</select>
</mapper>