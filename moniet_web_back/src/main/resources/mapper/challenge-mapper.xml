<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace= "kr.or.iei.challenge.model.dao.ChallengeDao">

	<!--챌린지 목록-->
	<select id="challengeList1" resultType="challenge">
		select 
			challenge_no,
  			challenge_title,
  			challenge_content,
  			challenge_kind,
  			challenge_amount,
  			challenge_result,
  			challenge_state,
  			member_no2,
  			to_char(challenge_start,'yyyy-mm-dd') as challenge_start,
  			to_char(challenge_end,'yyyy-mm-dd') as challenge_end
		 from challenge
		 where  member_no2=(select member_no from member where member_id=#{memberId}) and
		 to_char(challenge_end,'yyyy-mm-dd') >= to_char(sysdate,'yyyy-mm-dd') and challenge_result = 0 and challenge_state =1
	</select>
	
	<!--챌린지 목록(종료)-->
	<select id="challengeList2" resultType="challenge">
		select 
			challenge_no,
  			challenge_title,
  			challenge_content,
  			challenge_kind,
  			challenge_amount,
  			challenge_result,
  			challenge_state,
  			member_no2,
  			to_char(challenge_start,'yyyy-mm-dd') as challenge_start,
  			to_char(challenge_end,'yyyy-mm-dd') as challenge_end
		 from challenge
		  where  member_no2=(select member_no from member where member_id=#{memberId}) and
		  (to_char(sysdate,'yyyy-mm-dd') > to_char(challenge_end,'yyyy-mm-dd')or challenge_result = 2 or challenge_state =2)
	</select>
	
	<!--챌린지 상세보기-->
	<select id="selectOneChallenge" resultType="challenge">
		 select 
  			challenge_no,
  			challenge_title,
  			challenge_content,
  			challenge_kind,
  			challenge_amount,
  			challenge_result,
  			challenge_state,
  			member_no2,
  			to_char(challenge_start,'yyyy-mm-dd') as challenge_start,
  			to_char(challenge_end,'yyyy-mm-dd') as challenge_end
  		 from challenge 
  		 join member on (member_no2 = member_no)
  		 where challenge_no = #{challengeNo}
	</select>
	
	<!--챌린지 만들기-->
  	<insert id="insertChallenge">
  		insert into challenge values(challenge_seq.nextval,(select member_no from member where member_id=#{memberId}),#{challengeTitle},#{challengeContent},#{challengeKind},#{challengeAmount},#{challengeStart},#{challengeEnd},1,0)
  	</insert>
  	
  	<!--챌린지 삭제-->
  	<delete id="deleteChallenge">
  		delete from challenge where challenge_no = #{challengeNo}
  	</delete>
  	
  	<!--챌린지 포기-->
  	<update id="changeChallenge">
  		update challenge set challenge_result = #{challengeResult} where challenge_no = #{challengeNo}
  	</update>
  	
  	<!--챌린지 기간 종료-->
  	<update id="challengeFinish">
  	<![CDATA[
  		update challenge set challenge_result = 2
		where challenge_no in 
		(select challenge_no from challenge 
		where challenge_result =0 
		and 
		to_char(challenge_end,'yyyy-mm-dd') < to_char(sysdate,'yyyy-mm-dd'))
	]]>
  	</update>
</mapper>